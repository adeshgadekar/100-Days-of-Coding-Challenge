Find Maximum value

Given an array A[ ] your task is to complete the function max_val which finds the maximum value of abs(i â€“ j) * min(arr[i], arr[j]) where i and j vary from 0 to n-1. 

Example 1:

Input:
N = 4
arr[] = 3 2 1 4
Output: 9
Explanation:
Here, a[0] = 3 and a[3] = 4 
and thus result is  
abs(0-3)*min(3,4) = 9.
Example 2:

Input:
N= 4
arr[] = 8 1 9 4
Output: 16
Explanation:
Here, a[0]=8 and a[2]=9 thus 
result is abs(0-2)*min(8,9)=16.

Solution :  

class Solution
{
    /*You are required to complete this method*/
    int max_val(int arr[], int n)
    {
	    int max=Integer.MIN_VALUE;
	    int i=0,j=n-1;
	    while(i<j){
	        max=Math.max(max, Math.abs(i-j)*Math.min(arr[i],arr[j]));
            if(arr[i]<arr[j])
                i++;
            else
                j--;
	        }
	    return max;

    }
}

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Max distance between same elements

Given an array with repeated elements, the task is to find the maximum distance between two occurrences of an element.

Example 1:

Input
n= 6
arr = {1, 1, 2, 2, 2, 1}

Output
5

Explanation
arr[] = {1, 1, 2, 2, 2, 1}
Max Distance: 5
Distance for 1 is: 5-0 = 5
Distance for 2 is : 4-2 = 2
Max Distance 5
Example 2:

Input
n = 12
arr = {3, 2, 1, 2, 1, 4, 5, 8, 6, 7, 4, 2}

Output
10

Explanation



arr[] = {3, 2, 1, 2, 1, 4, 5, 8, 6, 7, 4, 2}
Max Distance 10
maximum distance for 2 is 11-1 = 10
maximum distance for 1 is 4-2 = 2
maximum distance for 4 is 10-5 = 5


Solution : 

class Solution
{
    int maxDistance(int arr[], int n)
    {
	    Map<Integer, Integer> mp = new HashMap<Integer, Integer>();
	    
	    int maxDistance = 0;
	    
	    for(int i = 0; i < n; i++) {
	        if(!mp.containsKey(arr[i])) {
	            mp.put(arr[i], i);
	            continue;
	        }
	        int distance = i - mp.get(arr[i]);
	        maxDistance = Math.max(distance, maxDistance);
	    }
	    
	    return maxDistance;
    }
}
