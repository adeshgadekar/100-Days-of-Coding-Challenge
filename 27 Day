Count Leaves in Binary Tree

Given a Binary Tree of size N, You have to count leaves in it. For example, there are two leaves in following tree

        1
     /      \
   10      39
  /
5

 

Example 1:


Input:
Given Tree is 
               4
             /   \
            8     10
           /     /   \
          7     5     1
         /
        3 
Output:
3
Explanation: 
Three leaves are 3 , 5 and 1.


Solution :


class Tree
{
    int countLeaves(Node node) 
    {
        if(node == null) return 0;
        
        if(node.left == null && node.right == null) return 1;
        
        return countLeaves(node.left) + countLeaves(node.right); 
    }
}



++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Sort The Array

Given a random set of numbers, Print them in sorted order.

Example 1:

Input:
N = 4
arr[] = {1, 5, 3, 2}
Output: {1, 2, 3, 5}
Explanation: After sorting array will 
be like {1, 2, 3, 5}.
Example 2:

Input:
N = 2
arr[] = {3, 1}
Output: {1, 3}
Explanation: After sorting array will
be like {1, 3}.

Solution : 


class Solution 
{ 
    int[] sortArr(int[] arr, int n) 
    { 
        Arrays.sort(arr);
        
        return arr;
        
    }
} 
