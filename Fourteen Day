Maximize sum(arr[i]*i) of an Array
Given an array A of N integers. Your task is to write a program to find the maximum value of âˆ‘arr[i]*i, where i = 0, 1, 2,., n 1.
You are allowed to rearrange the elements of the array.
Note: Since output could be large, hence module 109+7 and then print answer.

Example 1:

Input : Arr[] = {5, 3, 2, 4, 1}
Output : 40
Explanation:
If we arrange the array as 1 2 3 4 5 then 
we can see that the minimum index will multiply
with minimum number and maximum index will 
multiply with maximum number. 
So 1*0+2*1+3*2+4*3+5*4=0+2+6+12+20 = 40 mod(109+7) = 40

Example 2:

Input : Arr[] = {1, 2, 3}
Output : 8.


Solution : 

class Solution{
    
    int Maximize(int arr[], int n)
    {
        Arrays.sort(arr);
        long sum = 0;
        for(int i =0; i<n; i++) {
            sum+=((long)arr[i]*i)%1000000007;
        }
        return (int)(sum%1000000007); 
        
    }   
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Prime Number
For a given number N check if it is prime or not. A prime number is a number which is only divisible by 1 and itself.
 

Example 1:

Input:
N = 5
Output:
1
Explanation:
5 has 2 factors 1 and 5 only.
Example 2:

Input:
N = 25
Output:
0
Explanation:
25 has 3 factors 1, 5, 25


Solution : 

class Solution{
    static int isPrime(int N){
          if(N==1){
            return 0;
        }
        if(N==2 || N==3){
            return 1;
        }
        if(N%2==0 || N%3==0){
            return 0;
        }
        for(int i=5;i<=Math.sqrt(N);i+=6){
            if(N%i==0 || (N)%(i+2)==0){
                return 0;
            }
        }
        return 1;
    }
}
